resources:
  pipelines:
    - pipeline: AzDoAgentDrainerBuild
      project: shared-pipelines
      source: UKHO.AzDoAgentDrainer
      trigger:
        branches:
          include:
            - main

trigger:
  branches:
    include:
      - main
  paths:
    include:
    - ubuntu-agent-vm/*
    
schedules:
- cron: "0 5 * * 2"
  displayName: Weekly Build
  branches:
    include:
    - main
  always: true

pr: none

variables:
- group: AzDO-variables
- group: aib-variables
- name: imageDefName
  value: azure-pipelines-image-ubuntu-18-04
- name: runOutputName
  value: aiblinux
jobs:
  - job: GenerateImage
    pool: 'UKHO Ubuntu 1804'
    container: ukhydrographicoffice/terraform-azure:latest
    timeoutInMinutes: 120

    steps:

    - bash: |
        terraform init \
        -backend-config="storage_account_name=$(storageName)" \
        -backend-config="resource_group_name=$(resourceGroupName)" \
        -backend-config="container_name=tfstate" \
        -backend-config="key=aib-vnet.tfstate"
        
        terraform validate
        terraform apply -input=false -compact-warnings -auto-approve
        echo "##vso[task.setvariable variable=imageBuilderId]$(terraform output aib-identity-id)"        
      workingDirectory: ./terraform
      displayName: Terraform Plan
      env:
        TF_VAR_location_id: $(region)
        TF_VAR_vnetRgName: $(vnetRgName)
        TF_VAR_vnetName: $(vnetName)
        TF_VAR_subnetName: $(subnetName)
        ARM_TENANT_ID: $(TERRAFORM-TENANT-ID)
        ARM_CLIENT_ID: $(TERRAFORM-CLIENT-ID)
        ARM_CLIENT_SECRET: $(TERRAFORM-CLIENT-SECRET)
        ARM_SUBSCRIPTION_ID: $(TERRAFORM-SUBSCRIPTION-ID)
        ARM_ACCESS_KEY: $(TERRAFORM-ACCESS-KEY)

    - script: |
        cd ubuntu-agent-vm
        sed -i -e "s/<subscriptionID>/$(subscriptionId)/g" ubuntu-agent-vm-aib.json
        sed -i -e "s/<rgName>/$(imageResourceGroup)/g" ubuntu-agent-vm-aib.json
        sed -i -e "s/<region>/$(region)/g" ubuntu-agent-vm-aib.json
        sed -i -e "s/<sharedImageGalleryName>/$(sharedImageGalleryName)/g" ubuntu-agent-vm-aib.json
        sed -i -e "s/<imageDefName>/$(imageDefName)/g" ubuntu-agent-vm-aib.json
        sed -i -e "s/<runOutputName>/$(runOutputName)/g" ubuntu-agent-vm-aib.json
        sed -i -e "s/<replicationRegion>/$(replicationRegion)/g" ubuntu-agent-vm-aib.json
        sed -i -e "s/<branchname>/$(Build.SourceBranchName)/g" ubuntu-agent-vm-aib.json
        sed -i -e "s/<vnetRgName>/$(vnetRgName)/g" ubuntu-agent-vm-aib.json
        sed -i -e "s/<vnetName>/$(vnetName)/g" ubuntu-agent-vm-aib.json
        sed -i -e "s/<subnetName>/$(subnetName)/g" ubuntu-agent-vm-aib.json
        sed -i -e "s%<imgBuilderId>%$(imageBuilderId)%g" ubuntu-agent-vm-aib.json
        cat ubuntu-agent-vm-aib.json
      displayName: 'String replace variable names'

    - bash: |
        az login --service-principal --username "$CLIENTID" --password "$CLIENTSECRET" --tenant "$TENANTID"
        az account set --subscription "$SUBSCRIPTIONID"
        cd ubuntu-agent-vm
        az resource create \
          --resource-group $IMAGERESOURCEGROUP \
          --properties @ubuntu-agent-vm-aib.json \
          --is-full-object \
          --resource-type Microsoft.VirtualMachineImages/imageTemplates \
          -n ubuntu-agent-vm-aib
      displayName: 'Deploy AIB template'
      env:
        TENANTID: $(TERRAFORM-TENANT-ID)
        CLIENTID: $(TERRAFORM-CLIENT-ID)
        CLIENTSECRET: $(TERRAFORM-CLIENT-SECRET)
        SUBSCRIPTIONID: $(subscriptionId)
        IMAGERESOURCEGROUP: $(imageResourceGroup)

    - bash: |
        az login --service-principal --username "$CLIENTID" --password "$CLIENTSECRET" --tenant "$TENANTID"
        az account set --subscription "$SUBSCRIPTIONID"
        az resource invoke-action \
          --resource-group $IMAGERESOURCEGROUP \
          --resource-type  Microsoft.VirtualMachineImages/imageTemplates \
          -n ubuntu-agent-vm-aib \
          --action Run 
      displayName: 'Build the image'
      env:
        TENANTID: $(TERRAFORM-TENANT-ID)
        CLIENTID: $(TERRAFORM-CLIENT-ID)
        CLIENTSECRET: $(TERRAFORM-CLIENT-SECRET)
        SUBSCRIPTIONID: $(subscriptionId)
        IMAGERESOURCEGROUP: $(imageResourceGroup)


    - bash: |
        az login --service-principal --username "$CLIENTID" --password "$CLIENTSECRET" --tenant "$TENANTID"
        az account set --subscription "$SUBSCRIPTIONID"
        az resource delete \
        --resource-group $IMAGERESOURCEGROUP \
        --resource-type Microsoft.VirtualMachineImages/imageTemplates \
        -n ubuntu-agent-vm-aib
      condition: always()
      displayName: 'Delete the AIB template'
      env:
        TENANTID: $(TERRAFORM-TENANT-ID)
        CLIENTID: $(TERRAFORM-CLIENT-ID)
        CLIENTSECRET: $(TERRAFORM-CLIENT-SECRET)
        SUBSCRIPTIONID: $(subscriptionId)
        IMAGERESOURCEGROUP: $(imageResourceGroup)

    - bash: |
        $dateLine = (Get-Date).AddMonths(-1)
        $list = (az sig image-version list -g $(imageResourceGroup) -r $(sharedImageGalleryName) -i $(imageDefName) -o json | ConvertFrom-Json)
        $splice = $list | Select-Object -Skip 4
        foreach($item in $splice) {
            $publishedDate = Get-Date($item.publishingProfile.publishedDate)
            if($publishedDate -lt $dateLine) {
              $item.name
              Start-Job -ScriptBlock {param($imagename) az sig image-version delete -g $(imageResourceGroup) -r $(sharedImageGalleryName) -i $(imageDefName) -e $imagename} -ArgumentList @($($item.name))
            }
        }